/**
 * Grid holds arbitrary data in a 2d grid
 */

define(['./core', './system'],function(core, sys){
	
	var Grid = core.Class.extend({
		init: function(w,h){
			this.width=w;
			this.height=h;
			this.dat= [];
			for(var i=0; i<this.width*this.height; i++){
				this.dat.push(0);
			}
		},
		clearTo: function(val){
			for(var i=0; i<this.width*this.height; i++){
				this.dat[i]=val;
			}
		},
		blit: function(grid, x, y, w, h){
			if(typeof(w)=='undefined'){				
				w = grid.width;
			}
			if(typeof(h)=='undefined'){
				h =g.height;
			}
			
			w= Math.max(w, this.width-x);
			h= Math.max(h, this.height-y);
			for(i=0; i<w; i++){
				for(j=0; j<h; j++){
					this.dat[(y+j)*this.width + x+i]= grid.dat[j*grid.width +i];
				}
			}
		},
		get: function(x,y){
			if(x >=0 && x < this.width && y >=0 && y < this.height){
				return this.dat[x+ y*this.width];
			}
			core.log('grid.get out of bounds: '+x +' | '+y);
			return 0;
			
		},
		put: function(x,y,val){
			this.dat[y*this.width + x]=val;			
		}
	}); 
	
	return Grid;
});